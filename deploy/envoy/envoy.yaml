admin:
  access_log_path: /tmp/admin_access.log
  address:
    socket_address:
      address: 0.0.0.0
      port_value: 15001

static_resources:
  listeners:
    - name: listener_app
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8090
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: local_service
                      domains: ["*"]
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            cluster: app
                            max_grpc_timeout: 0s
#                        - match:
#                            prefix: "/keycloak"
#                          route:
#                            cluster: keycloak
#                            max_grpc_timeout: 0s
                http_filters:
                  - name: envoy.filters.http.jwt_authn
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.jwt_authn.v3.JwtAuthentication
                      providers:
                        keycloak_provider:
                          issuer: "http://localhost:8080/realms/otus-marketplace"
#                          issuer: "http://keycloak:8080/auth/realms/otus-marketplace"
                          remote_jwks:
                            http_uri:
                              uri: http://keycloak:8080/realms/otus-marketplace/protocol/openid-connect/certs
                              cluster: keycloak
                              timeout: 5s
                            cache_duration:
                              seconds: 300
                          # Пробрасываем JWT в заголовок запроса
                          forward: true
                          forward_payload_header: x-jwt-payload
                      rules:
                        - match: {prefix: /}
                          requires: {provider_name: keycloak_provider}
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
  clusters:
    - name: app
      connect_timeout: 30s
      type: LOGICAL_DNS
      # Comment out the following line to test on v6 networks
      dns_lookup_family: V4_ONLY
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: app
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: app
                      port_value: 8080

# BADDD
#      connect_timeout: 0.25s
#      type: STRICT_DNS
#      lb_policy: ROUND_ROBIN
#      hosts:
#        - socket_address:
#            address: app
#            port_value: 8080  # Specify the port for your app service

#      transport_socket:
#        name: envoy.transport_sockets.tls
#        typed_config:
#          "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext"
#          common_tls_context:
#            tls_certificates:
#              - certificate_chain:
#                  filename: "/etc/envoy/certs/envoy_sidecar.crt"
#                private_key:
#                  filename: "/etc/envoy/certs/envoy_sidecar.key"
#            validation_context:
#              trusted_ca: { filename: "/etc/envoy/certs/ca.crt" }


    - name: keycloak
      connect_timeout: 0.25s
      type: LOGICAL_DNS
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: keycloak
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address:
                      address: keycloak
                      port_value: 8080  # TODO use env varible KEYCLOAK_PUBLISHED_PORT for server port

#    - name: keycloak
#      connect_timeout: 30s
#      type: LOGICAL_DNS
#      # Comment out the following line to test on v6 networks
#      dns_lookup_family: V4_ONLY
#      lb_policy: ROUND_ROBIN
#      load_assignment:
#        cluster_name: app
#        endpoints:
#          - lb_endpoints:
#              - endpoint:
#                  address:
#                    socket_address:
#                      address: keycloak
#                      port_value: 8080
#      connect_timeout: 0.25s
#      type: STRICT_DNS
#      lb_policy: ROUND_ROBIN
#      hosts:
#        - socket_address:
#            address: keycloak
##            port_value: 8443  # Use the actual port on which Keycloak is exposed
#            port_value: 8080  # Use the actual port on which Keycloak is exposed
#      transport_socket:
#        name: envoy.transport_sockets.tls
#        typed_config:
#          "@type": "type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext"
#          common_tls_context:
#            tls_certificates:
#              - certificate_chain:
#                  filename: "/etc/envoy/certs/server.crt"
#                private_key:
#                  filename: "/etc/envoy/certs/server.key"
#            validation_context:
#              trusted_ca: { filename: "/etc/envoy/certs/ca.crt" }
